.PHONY: build run test clean docker-up docker-down migrate

# Build the application
build:
	go build -o bin/webcrawler main.go

# Run the application
run:
	go run main.go

# Run tests
test:
	go test ./...

# Clean build artifacts
clean:
	rm -rf bin/

# Install dependencies
deps:
	go mod tidy
	go mod download

# Start Docker services
docker-up:
	docker-compose up -d

# Stop Docker services
docker-down:
	docker-compose down

# View logs
logs:
	docker-compose logs -f backend

# Build and run with Docker
docker-build:
	docker-compose build

# Run database migrations (if using a migration tool)
migrate:
	mysql -h localhost -u root -p webcrawler < init.sql

# Format code
fmt:
	go fmt ./...

# Lint code
lint:
	golangci-lint run

# Development setup
dev-setup: deps docker-up
	@echo "Development environment is ready!"
	@echo "Backend: http://localhost:8080"
	@echo "Database: localhost:3306"

# Production build
prod-build:
	CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o bin/webcrawler main.go

# Help
help:
	@echo "Available commands:"
	@echo "  build       - Build the application"
	@echo "  run         - Run the application"
	@echo "  test        - Run tests"
	@echo "  clean       - Clean build artifacts"
	@echo "  deps        - Install dependencies"
	@echo "  docker-up   - Start Docker services"
	@echo "  docker-down - Stop Docker services"
	@echo "  logs        - View application logs"
	@echo "  dev-setup   - Set up development environment"
	@echo "  fmt         - Format code"
	@echo "  lint        - Lint code"
	@echo "  help        - Show this help message"